{"mappings":"ACAA,MAAM,EAAa,oBACb,EAAiB,CACrB,6BACA,sBACA,kBACA,qBACD,CAGD,KAAK,gBAAgB,CAAC,UAAW,AAAC,IAChC,KAAK,WAAW,GAChB,EAAI,SAAS,CACX,OAAO,IAAI,CAAC,GACT,IAAI,CAAC,AAAC,GACE,EAAM,MAAM,CAAC,IAErB,KAAK,CAAC,AAAC,GAAQ,QAAQ,KAAK,CAAC,gBAAiB,IAErD,GAGA,KAAK,gBAAgB,CAAC,WAAY,AAAC,IACjC,IAAM,EAAiB,CAAC,EAAW,CACnC,EAAI,SAAS,CACX,OAAO,IAAI,GAAG,IAAI,CAAC,AAAC,GACX,QAAQ,GAAG,CAChB,EAAW,GAAG,CAAC,AAAC,IACd,GAAI,CAAC,EAAe,QAAQ,CAAC,GAE3B,OADA,QAAQ,GAAG,CAAC,4BAA6B,GAClC,OAAO,MAAM,CAAC,EAEzB,KAED,IAAI,CAAC,KACN,KAAK,OAAO,CAAC,KAAK,EACpB,GAEJ,GAGA,KAAK,gBAAgB,CAAC,QAAS,AAAC,IAC9B,EAAI,WAAW,CACb,OAAO,KAAK,CAAC,EAAI,OAAO,EAAE,IAAI,CAAC,AAAC,GAC9B,AAAI,GACF,MAAM,EAAI,OAAO,EAAE,IAAI,CAAC,AAAC,IACvB,OAAO,IAAI,CAAC,GAAY,IAAI,CAAC,AAAC,IAC5B,EAAM,GAAG,CAAC,EAAI,OAAO,CAAE,EACzB,EACF,GACO,GAEA,MAAM,EAAI,OAAO,GAIhC","sources":["<anon>","service-worker.js"],"sourcesContent":["var $5ea9b9f72058ba3c$exports = {};\nconst $5ea9b9f72058ba3c$var$CACHE_NAME = 'budget-planner-v3';\nconst $5ea9b9f72058ba3c$var$FILES_TO_CACHE = [\n    '/kakeibo/icons/favicon.ico',\n    '/kakeibo/index.html',\n    '/kakeibo/app.js',\n    '/kakeibo/style.css'\n];\n// Install event: cache necessary files\nself.addEventListener('install', (evt)=>{\n    self.skipWaiting();\n    evt.waitUntil(caches.open($5ea9b9f72058ba3c$var$CACHE_NAME).then((cache)=>{\n        return cache.addAll($5ea9b9f72058ba3c$var$FILES_TO_CACHE);\n    }).catch((err)=>console.error('Cache failed:', err)));\n});\n// Activate event: delete old caches and take control\nself.addEventListener('activate', (evt)=>{\n    const cacheWhitelist = [\n        $5ea9b9f72058ba3c$var$CACHE_NAME\n    ];\n    evt.waitUntil(caches.keys().then((cacheNames)=>{\n        return Promise.all(cacheNames.map((cacheName)=>{\n            if (!cacheWhitelist.includes(cacheName)) {\n                console.log(\"Eliminando cach\\xe9 antigua:\", cacheName);\n                return caches.delete(cacheName);\n            }\n        }));\n    }).then(()=>{\n        self.clients.claim();\n    }));\n});\n// Fetch event: try the cache first, then network\nself.addEventListener('fetch', (evt)=>{\n    evt.respondWith(caches.match(evt.request).then((cachedResponse)=>{\n        if (cachedResponse) {\n            fetch(evt.request).then((networkResponse)=>{\n                caches.open($5ea9b9f72058ba3c$var$CACHE_NAME).then((cache)=>{\n                    cache.put(evt.request, networkResponse);\n                });\n            });\n            return cachedResponse;\n        } else return fetch(evt.request);\n    }));\n});\n\n\n//# sourceMappingURL=service-worker.ab94f4fa.js.map\n","const CACHE_NAME = 'budget-planner-v3'; \r\nconst FILES_TO_CACHE = [\r\n  '/kakeibo/icons/favicon.ico',\r\n  '/kakeibo/index.html',\r\n  '/kakeibo/app.js',\r\n  '/kakeibo/style.css'\r\n];\r\n\r\n// Install event: cache necessary files\r\nself.addEventListener('install', (evt) => {\r\n  self.skipWaiting();  \r\n  evt.waitUntil(\r\n    caches.open(CACHE_NAME)\r\n      .then((cache) => {\r\n        return cache.addAll(FILES_TO_CACHE); \r\n      })\r\n      .catch((err) => console.error('Cache failed:', err))\r\n  );\r\n});\r\n\r\n// Activate event: delete old caches and take control\r\nself.addEventListener('activate', (evt) => {\r\n  const cacheWhitelist = [CACHE_NAME]; \r\n  evt.waitUntil(\r\n    caches.keys().then((cacheNames) => {\r\n      return Promise.all(\r\n        cacheNames.map((cacheName) => {\r\n          if (!cacheWhitelist.includes(cacheName)) {\r\n            console.log('Eliminando cachÃ© antigua:', cacheName);\r\n            return caches.delete(cacheName);\r\n          }\r\n        })\r\n      );\r\n    }).then(() => {\r\n      self.clients.claim(); \r\n    })\r\n  );\r\n});\r\n\r\n// Fetch event: try the cache first, then network\r\nself.addEventListener('fetch', (evt) => {\r\n  evt.respondWith(\r\n    caches.match(evt.request).then((cachedResponse) => {\r\n      if (cachedResponse) {       \r\n        fetch(evt.request).then((networkResponse) => {\r\n          caches.open(CACHE_NAME).then((cache) => {\r\n            cache.put(evt.request, networkResponse); \r\n          });\r\n        });\r\n        return cachedResponse; \r\n      } else {\r\n        return fetch(evt.request);\r\n      }\r\n    })\r\n  );\r\n});\r\n"],"names":["$5ea9b9f72058ba3c$var$CACHE_NAME","$5ea9b9f72058ba3c$var$FILES_TO_CACHE","self","addEventListener","evt","skipWaiting","waitUntil","caches","open","then","cache","addAll","catch","err","console","error","cacheWhitelist","keys","cacheNames","Promise","all","map","cacheName","includes","log","delete","clients","claim","respondWith","match","request","cachedResponse","fetch","networkResponse","put"],"version":3,"file":"service-worker.ab94f4fa.js.map"}